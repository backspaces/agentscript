#!/usr/bin/env node

const shell = require('shelljs')

let dir = process.argv[2] // .replace(/\/$/, '') // remove optional final "/"
if (!dir) throw Error('Needs dir name argument')
dir = dir.replace(/\/$/, '') // remove optional final "/"
console.log('dir:', dir)

let models
// const models = shell.ls(`${dir}/*.js`)
if (dir === 'models' || dir === 'models/scripts') {
    models = shell
        .ls(`${dir}/*Model.js`)
        // OK if first char is capitolized, index.html will just recap
        .sed(/Model/, '')
} else {
    models = shell.ls(`${dir}/*.html`)
}
// } else if (dir === 'models2' || dir === 'models3') {
//     models = shell.ls(`${dir}/*View.js`).sed(/View/, '')
// } else if (dir === 'mvc2') {
//     models = shell.ls(`${dir}/*MVC.js`).sed(/MVC/, '')
// } else {
//     models = shell
//         .ls(`${dir}/*.js`)
//         // Avoid FooModel.js, fooWorker.js, just foo.js
//         .grep('-v', '[A-Z]')
// }

models = models
    .sed(/^.*\//, '')
    .sed(/.js$/, '')
    .replace(/\n+$/, '')
    .split('\n')
    .map(str => str.charAt(0).toLowerCase() + str.slice(1))

// console.log('models:', models)

// const models = shell
//     .ls(`${dir}/*.js`)
//     // Avoid FooModel.js, fooWorker.js, just foo.js
//     .grep('-v', '[A-Z]')
//     .sed(/^.*\//, '')
//     .sed(/.js$/, '')
//     .replace(/\n+$/, '')
//     .split('\n')

shell.echo('models:', models)
models.forEach(model => shell.exec(`bin/runmodel ${dir} ${model}`))
